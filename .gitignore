# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# exclude data from source control by default
/data/
# /experiments/
# /models/
# /src/models
# /src/config/experiments/
# notes.md

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
.idea/

# Sensitive data
experiments/**/*.tiff
experiments/*/results/**/*.YAML
*.npz
*.h5
experiments/**/data/**
experiments/**/results/*.tif
*.tif
*.pkl
*.tiff

# too big files to put on git (over 100Mb)
experiments/exp03-1/UNET/weights_best.ckpt.data-00000-of-00001
experiments/exp03-1/UNET/weights_now.ckpt.data-00000-of-00001
experiments/exp14-1/Custom_on_Pretrained_3DUnet_lightsheet_boundary/logs/*
*.index
*.data-00000-of-00001
experiments/exp03-5/UNET/weights_best.hdf5
experiments/exp03-5/UNET/weights_now.hdf5
# these are bad results
experiments/exp03/results/BinaryMask/

src/tools/run_multiple_test_sets_predictions.py
notebooks/trying_things_out/pseudo-stardist.ipynb
notebooks/relabel.ipynb
*.dot
src/tools/resample_multiple.py
src/config/experiments/nr_of_trees/*
experiments/exp14-1_pred-1/results-old/*
experiments/exp14-1_pred/results_filter_true_sigma_1/*
experiments/exp14-1_pred/results_filter_true_sigma_2/*
**/results-defaults/*
**/Pretrained_3DUnet_lightsheet_boundary_Backup_10k_iterations/*
src/config/experiments/nr_of_trees/exp07-nr-of-trees.yaml
**/paths_train.yaml
**/paths_predict_*.yaml
*.lnk
notebooks/results/Measurements/*
